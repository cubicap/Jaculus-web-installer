{"mappings":"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","sources":["node_modules/esptool-js/lib/targets/esp32c3.js","node_modules/esptool-js/lib/targets/stub_flasher/stub_flasher_32c3.json"],"sourcesContent":["import { ROM } from \"./rom.js\";\nimport ESP32C3_STUB from \"./stub_flasher/stub_flasher_32c3.json\";\nexport class ESP32C3ROM extends ROM {\n    constructor() {\n        super(...arguments);\n        this.CHIP_NAME = \"ESP32-C3\";\n        this.IMAGE_CHIP_ID = 5;\n        this.EFUSE_BASE = 0x60008800;\n        this.MAC_EFUSE_REG = this.EFUSE_BASE + 0x044;\n        this.UART_CLKDIV_REG = 0x3ff40014;\n        this.UART_CLKDIV_MASK = 0xfffff;\n        this.UART_DATE_REG_ADDR = 0x6000007c;\n        this.FLASH_WRITE_SIZE = 0x400;\n        this.BOOTLOADER_FLASH_OFFSET = 0;\n        this.FLASH_SIZES = {\n            \"1MB\": 0x00,\n            \"2MB\": 0x10,\n            \"4MB\": 0x20,\n            \"8MB\": 0x30,\n            \"16MB\": 0x40,\n        };\n        this.SPI_REG_BASE = 0x60002000;\n        this.SPI_USR_OFFS = 0x18;\n        this.SPI_USR1_OFFS = 0x1c;\n        this.SPI_USR2_OFFS = 0x20;\n        this.SPI_MOSI_DLEN_OFFS = 0x24;\n        this.SPI_MISO_DLEN_OFFS = 0x28;\n        this.SPI_W0_OFFS = 0x58;\n        this.TEXT_START = ESP32C3_STUB.text_start;\n        this.ENTRY = ESP32C3_STUB.entry;\n        this.DATA_START = ESP32C3_STUB.data_start;\n        this.ROM_DATA = ESP32C3_STUB.data;\n        this.ROM_TEXT = ESP32C3_STUB.text;\n    }\n    async getPkgVersion(loader) {\n        const numWord = 3;\n        const block1Addr = this.EFUSE_BASE + 0x044;\n        const addr = block1Addr + 4 * numWord;\n        const word3 = await loader.readReg(addr);\n        const pkgVersion = (word3 >> 21) & 0x07;\n        return pkgVersion;\n    }\n    async getChipRevision(loader) {\n        const block1Addr = this.EFUSE_BASE + 0x044;\n        const numWord = 3;\n        const pos = 18;\n        const addr = block1Addr + 4 * numWord;\n        const ret = ((await loader.readReg(addr)) & (0x7 << pos)) >> pos;\n        return ret;\n    }\n    async getChipDescription(loader) {\n        let desc;\n        const pkgVer = await this.getPkgVersion(loader);\n        if (pkgVer === 0) {\n            desc = \"ESP32-C3\";\n        }\n        else {\n            desc = \"unknown ESP32-C3\";\n        }\n        const chip_rev = await this.getChipRevision(loader);\n        desc += \" (revision \" + chip_rev + \")\";\n        return desc;\n    }\n    async getChipFeatures(loader) {\n        return [\"Wi-Fi\"];\n    }\n    async getCrystalFreq(loader) {\n        return 40;\n    }\n    _d2h(d) {\n        const h = (+d).toString(16);\n        return h.length === 1 ? \"0\" + h : h;\n    }\n    async readMac(loader) {\n        let mac0 = await loader.readReg(this.MAC_EFUSE_REG);\n        mac0 = mac0 >>> 0;\n        let mac1 = await loader.readReg(this.MAC_EFUSE_REG + 4);\n        mac1 = (mac1 >>> 0) & 0x0000ffff;\n        const mac = new Uint8Array(6);\n        mac[0] = (mac1 >> 8) & 0xff;\n        mac[1] = mac1 & 0xff;\n        mac[2] = (mac0 >> 24) & 0xff;\n        mac[3] = (mac0 >> 16) & 0xff;\n        mac[4] = (mac0 >> 8) & 0xff;\n        mac[5] = mac0 & 0xff;\n        return (this._d2h(mac[0]) +\n            \":\" +\n            this._d2h(mac[1]) +\n            \":\" +\n            this._d2h(mac[2]) +\n            \":\" +\n            this._d2h(mac[3]) +\n            \":\" +\n            this._d2h(mac[4]) +\n            \":\" +\n            this._d2h(mac[5]));\n    }\n    getEraseSize(offset, size) {\n        return size;\n    }\n}\n","{\n    \"entry\": 1077413532,\n    \"text\": \"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\",\n    \"text_start\": 1077411840,\n    \"data\": \"IGvIP3YKOEDGCjhAHgs4QMILOEAuDDhA3As4QEIJOEB+CzhAvgs4QDILOEDyCDhAZgs4QPIIOEBQCjhAlgo4QMYKOEAeCzhAYgo4QKYJOEDWCThAXgo4QIAOOEDGCjhARg04QDgOOEAyCDhAYA44QDIIOEAyCDhAMgg4QDIIOEAyCDhAMgg4QDIIOEAyCDhA4gw4QDIIOEBkDThAOA44QA==\",\n    \"data_start\": 1070164912\n}\n"],"names":[],"version":3,"file":"esp32c3.a7586a7c.js.map"}